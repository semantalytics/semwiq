/*****************************************************************************
 * Source code information
 * -----------------------
 * Original author    Andreas Langegger, Johannes Kepler University Linz, Austria
 * Author email       al@jku.at
 * Package            @package@
 * Web site           @website@
 * Created            29 Jul 2009 19:46
 * @copyright@
 *****************************************************************************/

// Package
///////////////////////////////////////
package at.jku.semwiq.mediator.vocabulary;

// Imports
///////////////////////////////////////
import com.hp.hpl.jena.rdf.model.*;


/**
 * Vocabulary definitions from file:vocabulary/rdfs.org/ns/void
 * @author Auto-generated by schemagen on 29 Jul 2009 19:46
 */
public class voiD {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://rdfs.org/ns/void#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    



    /* Vocabulary properties */

    /** <p>Announcement of an RDF dump of the dataset.</p> */
    public static final Property dataDump = m_model.createProperty( "http://rdfs.org/ns/void#dataDump" );
    
    public static final Property exampleResource = m_model.createProperty( "http://rdfs.org/ns/void#exampleResource" );
    
    public static final Property feature = m_model.createProperty( "http://rdfs.org/ns/void#feature" );
    
    public static final Property linkPredicate = m_model.createProperty( "http://rdfs.org/ns/void#linkPredicate" );
    
    /** <p>The sink target of an interlinking</p> */
    public static final Property objectsTarget = m_model.createProperty( "http://rdfs.org/ns/void#objectsTarget" );
    
    public static final Property sparqlEndpoint = m_model.createProperty( "http://rdfs.org/ns/void#sparqlEndpoint" );
    
    public static final Property statItem = m_model.createProperty( "http://rdfs.org/ns/void#statItem" );
    
    /** <p>The source target of an interlinking</p> */
    public static final Property subjectsTarget = m_model.createProperty( "http://rdfs.org/ns/void#subjectsTarget" );
    
    public static final Property subset = m_model.createProperty( "http://rdfs.org/ns/void#subset" );
    
    public static final Property target = m_model.createProperty( "http://rdfs.org/ns/void#target" );
    
    /** <p>Defines a simple URI look-up protocol for accessing a dataset.</p> */
    public static final Property uriLookupEndpoint = m_model.createProperty( "http://rdfs.org/ns/void#uriLookupEndpoint" );
    
    /** <p>Defines a regular expression pattern matching URIs in the dataset.</p> */
    public static final Property uriRegexPattern = m_model.createProperty( "http://rdfs.org/ns/void#uriRegexPattern" );
    
    /** <p>A vocabulary that is used in the dataset.</p> */
    public static final Property vocabulary = m_model.createProperty( "http://rdfs.org/ns/void#vocabulary" );
    

    /* Vocabulary classes */

    public static final Resource Dataset = m_model.createResource( "http://rdfs.org/ns/void#Dataset" );
    
    public static final Resource Linkset = m_model.createResource( "http://rdfs.org/ns/void#Linkset" );
    
    public static final Resource TechnicalFeature = m_model.createResource( "http://rdfs.org/ns/void#TechnicalFeature" );
    

    /* Vocabulary individuals */

}

/*
@footer@
*/

